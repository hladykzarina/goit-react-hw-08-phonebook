{"version":3,"file":"static/js/764.4d4d77c2.chunk.js","mappings":"uRAEaA,EAA0BC,EAAAA,EAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gQAexCC,EAAwBH,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2FAOjCG,EAAwBL,EAAAA,EAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,2EAMpCK,EAAwBP,EAAAA,EAAAA,MAAYQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,8mBA0BpCO,EAAsBT,EAAAA,EAAAA,OAAaU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,ma,SCoBhD,MAhEA,WACE,IAAMS,GAAWC,EAAAA,EAAAA,MACjBC,GAAwBC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,KAAKC,GAAAC,EAAAA,EAAAA,GAAAN,EAAA,GAAhEO,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEdI,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAEE,cAAlBV,EAAIS,EAAJT,KAAMW,EAAKF,EAALE,MACdL,GAAQ,SAAAM,GAAQ,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAQ,IAAAE,EAAAA,EAAAA,GAAA,GAAGd,EAAOW,GAAK,GACnD,EAQQX,EAA0BK,EAA1BL,KAAMC,EAAoBI,EAApBJ,MAAOC,EAAaG,EAAbH,SAErB,OACEa,EAAAA,EAAAA,MAAC/B,EAAuB,CAAAgC,SAAA,EACtBC,EAAAA,EAAAA,KAAC7B,EAAqB,CAAA4B,SAAC,4CAGvBD,EAAAA,EAAAA,MAAA,QAAMG,SAbW,SAAAV,GACnBA,EAAEW,iBACFvB,EAASwB,EAAAA,EAAAA,UAAuBP,EAAAA,EAAAA,GAAC,CAAC,EAAIR,KACtCC,EAAQ,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAC3C,EASiCc,SAAA,EAC3BD,EAAAA,EAAAA,MAACzB,EAAqB,CAAA0B,SAAA,CAAC,QAErBC,EAAAA,EAAAA,KAACzB,EAAqB,CACpB6B,KAAK,OACLrB,KAAK,OACLsB,QAAQ,yHACRC,MAAM,8DACNC,YAAY,kBACZC,UAAQ,EACRd,MAAOX,EACP0B,SAAUnB,QAGdQ,EAAAA,EAAAA,MAACzB,EAAqB,CAAA0B,SAAA,CAAC,SAErBC,EAAAA,EAAAA,KAACzB,EAAqB,CACpB6B,KAAK,QACLrB,KAAK,QACLsB,QAAQ,mDACRC,MAAM,mBACNC,YAAY,mBACZC,UAAQ,EACRd,MAAOV,EACPyB,SAAUnB,QAGdQ,EAAAA,EAAAA,MAACzB,EAAqB,CAAA0B,SAAA,CAAC,YAErBC,EAAAA,EAAAA,KAACzB,EAAqB,CACpB6B,KAAK,WACLrB,KAAK,WACLyB,UAAQ,EACRd,MAAOT,EACPwB,SAAUnB,QAGdU,EAAAA,EAAAA,KAACvB,EAAmB,CAAC2B,KAAK,SAAQL,SAAC,kBAI3C,C","sources":["view/PageRegistration/PageRegistration.styled.jsx","view/PageRegistration/PageRegistration.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const PageRegistrationSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  left: 30%;\n\n  width: 600px;\n  margin: 0 auto;\n  margin-top: 40px;\n  background: #7ac37a;\n  padding: 2em;\n  border-radius: 6px;\n  box-shadow: inset rgba(0, 0, 0, 0.6);\n`;\n\nexport const PageRegistrationTitle = styled.h2`\n  font-size: 18px;\n  text-align: center;\n  margin: 0;\n  margin-bottom: 20px;\n`;\n\nexport const PageRegistrationLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n`;\n\nexport const PageRegistrationInput = styled.input`\n  width: 100%;\n  padding: 12px 20px;\n  margin: 8px 0 20px;\n  display: inline-block;\n  box-sizing: border-box;\n  transition: background-color 0.5s ease-in-out;\n  border: 2px solid rgb(8, 78, 8);\n  border-radius: 10px;\n  cursor: pointer;\n  font-size: 15px;\n  box-shadow: 17px 17px 84px 18px rgba(21, 15, 15, 0.2) inset;\n\n  &::placeholder {\n    color: #ffffff;\n    font-style: italic;\n  }\n\n  &:focus {\n    background-color: #f9f1f1;\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset,\n      rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;\n    border: 2px solid rgb(22, 2, 2);\n  }\n`;\n\nexport const PageRegistrationBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100px;\n  height: 100%;\n  padding: 5px;\n  border-radius: 10px;\n  color: #ffffff;\n  cursor: pointer;\n  font-size: 15px;\n  box-shadow: 17px 17px 84px 18px rgba(21, 15, 15, 0.2) inset;\n  border: 2px solid rgb(8, 78, 8);\n  background-color: #858181;\n\n  &:hover,\n  &:focus {\n    background-color: rgb(114, 113, 114);\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOperations from 'redux/auth/authOperations';\n\nimport {\n  PageRegistrationSection,\n  PageRegistrationTitle,\n  PageRegistrationLabel,\n  PageRegistrationInput,\n  PageRegistrationBtn,\n} from './PageRegistration.styled';\n\nfunction PageRegistration() {\n  const dispatch = useDispatch();\n  const [form, setForm] = useState({ name: '', email: '', password: '' });\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    setForm(prevForm => ({ ...prevForm, [name]: value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ ...form }));\n    setForm({ name: '', email: '', password: '' });\n  };\n\n  const { name, email, password } = form;\n\n  return (\n    <PageRegistrationSection>\n      <PageRegistrationTitle>\n        Please enter your registration details\n      </PageRegistrationTitle>\n      <form onSubmit={handleSubmit}>\n        <PageRegistrationLabel>\n          Name\n          <PageRegistrationInput\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n            placeholder=\"Enter your name\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </PageRegistrationLabel>\n        <PageRegistrationLabel>\n          Email\n          <PageRegistrationInput\n            type=\"email\"\n            name=\"email\"\n            pattern=\"([A-z0-9_.-]{1,})@([A-z0-9_.-]{1,}).([A-z]{2,8})\"\n            title=\"Enter your email\"\n            placeholder=\"Enter your email\"\n            required\n            value={email}\n            onChange={handleChange}\n          />\n        </PageRegistrationLabel>\n        <PageRegistrationLabel>\n          Password\n          <PageRegistrationInput\n            type=\"password\"\n            name=\"password\"\n            required\n            value={password}\n            onChange={handleChange}\n          />\n        </PageRegistrationLabel>\n        <PageRegistrationBtn type=\"submit\">Register</PageRegistrationBtn>\n      </form>\n    </PageRegistrationSection>\n  );\n}\nexport default PageRegistration;\n"],"names":["PageRegistrationSection","styled","_templateObject","_taggedTemplateLiteral","PageRegistrationTitle","_templateObject2","PageRegistrationLabel","_templateObject3","PageRegistrationInput","_templateObject4","PageRegistrationBtn","_templateObject5","dispatch","useDispatch","_useState","useState","name","email","password","_useState2","_slicedToArray","form","setForm","handleChange","e","_e$currentTarget","currentTarget","value","prevForm","_objectSpread","_defineProperty","_jsxs","children","_jsx","onSubmit","preventDefault","authOperations","type","pattern","title","placeholder","required","onChange"],"sourceRoot":""}